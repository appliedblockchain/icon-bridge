name: Icon-Algorand CI
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Start containers
        run: |
          cd devnet/docker/icon-algorand
          docker-compose -f "docker-compose.yml" up -d --build

      - name: Run Algorand lifecheck test
        run: |
          export ALGOD_ADDRESS=http://$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' algorand):4001
          go test -v pyteal/test/lifecheck_test/lifecheck_test.go

      - name: Install goloop
        run: |
          cd /tmp
          wget https://github.com/icon-project/goloop/archive/refs/tags/v1.3.3.tar.gz
          tar xf v1.3.3.tar.gz
          cd goloop-1.3.3/cmd/goloop
          go install
          cd /tmp
          rm -rf goloop-1.3.3 v1.3.3.tar.gz

      - name: Create and fund keystore wallet
        working-directory: ./devnet/docker/icon-algorand
        run: |
          export PATH=$PATH:~/go/bin
          goloop ks gen --out icon.keystore.json
          export KS_ADDRESS=$(cat icon.keystore.json | jq -r '.address')
          NID=$(docker compose exec goloop goloop chain ls | jq -r '.[0] | .nid')
          PASSWORD=$(docker compose exec goloop cat goloop.keysecret)
          docker compose exec goloop goloop rpc sendtx transfer \
            --uri http://localhost:9080/api/v3  \
            --nid $NID \
            --step_limit=3000000000 \
            --key_store goloop.keystore.json --key_password $PASSWORD \
            --to $KS_ADDRESS --value=2001

      - name: Build ICON smart contracts
        working-directory: ./javascore
        run: |
          gradle clean
          gradle dummyBSH:optimizedJar
          gradle bmc:optimizedJar

      - name: Deploy BMC on ICON
        working-directory: ./devnet/docker/icon-algorand
        run: |
          export PATH=$PATH:~/go/bin
          NID=$(docker compose exec goloop goloop chain ls | jq -r '.[0] | .nid')
          CONTRACT=../../../javascore/bmc/build/libs/bmc-optimized.jar

          TXN_ID=$(
            goloop rpc sendtx deploy $CONTRACT \
              --uri http://localhost:9080/api/v3 \
              --key_store icon.keystore.json --key_password gochain \
              --nid $NID --step_limit 10000000000 \
              --content_type application/java \
              --param _net="$NID.icon"
          )

          CONTRACT_ADDR=$(../algod/scripts/wait_javascore_deploy.sh $TXN_ID scoreAddress)

      - name: Deploy dummy BSH on ICON
        working-directory: ./devnet/docker/icon-algorand
        run: |
          export PATH=$PATH:~/go/bin
          NID=$(docker compose exec goloop goloop chain ls | jq -r '.[0] | .nid')
          CONTRACT=../../../javascore/dummyBSH/build/libs/dummyBSH-optimized.jar

          TXN_ID=$(
            goloop rpc sendtx deploy $CONTRACT \
              --uri http://localhost:9080/api/v3 \
              --key_store icon.keystore.json --key_password gochain \
              --nid $NID --step_limit 10000000000 \
              --content_type application/java
          )

          CONTRACT_ADDR=$(../algod/scripts/wait_javascore_deploy.sh $TXN_ID scoreAddress)

          msg=$(
            goloop rpc call --to $(echo $CONTRACT_ADDR | cut -d '"' -f 2) \
              --uri http://localhost:9080/api/v3 \
              --method getLastReceivedMessage
          )

          echo -n $msg | xxd -r -p
