{
  "name": "bmc-handler",
  "methods": [
    {
      "name": "setBTPAddress",
      "args": [
        {
          "type": "string",
          "name": "network"
        }
      ],
      "returns": {
        "type": "void"
      },
      "desc": "Set BTP address for BMC in Algorand network, ex: btp://1234.algo/0xabcd"
    },
    {
      "name": "setRoute",
      "args": [
        {
          "type": "string",
          "name": "route"
        }
      ],
      "returns": {
        "type": "void"
      },
      "desc": "Set BTP address for Icon BMC, ex: btp://0x1.icon/0xabcd"
    },
    {
      "name": "registerBSHContract",
      "args": [
        {
          "type": "address",
          "name": "bsh_app_address"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "setRelayer",
      "args": [
        {
          "type": "address",
          "name": "relayer_account"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "sendMessage",
      "args": [
        {
          "type": "string",
          "name": "to",
          "desc": "BTP Address of destination BMC."
        },
        {
          "type": "string",
          "name": "svc",
          "desc": "Service that is to be handled."
        },
        {
          "type": "uint64",
          "name": "sn",
          "desc": "Serial number of the message, it should be positive."
        },
        {
          "type": "byte[]",
          "name": "msg",
          "desc": "BSH Message in bytes to be picked up by relayer."
        }
      ],
      "returns": {
        "type": "void"
      },
      "desc": "This method Log byte array of BMC message received from registered BSH's\nThe caller must be an registered BSH smart contract."
    },
    {
      "name": "handleRelayMessage",
      "args": [
        {
          "type": "application",
          "name": "bsh_app"
        },
        {
          "type": "string",
          "name": "msg"
        }
      ],
      "returns": {
        "type": "string"
      }
    }
  ],
  "networks": {}
}